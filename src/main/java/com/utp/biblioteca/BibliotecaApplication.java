package com.utp.biblioteca;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.time.LocalDate;

/**
 * Clase principal de la aplicaci√≥n
 * Sistema de Gesti√≥n de Biblioteca Digital - POO UTP
 */
public class BibliotecaApplication extends Application {
    
    private static final Logger logger = LoggerFactory.getLogger(BibliotecaApplication.class);
    
    @Override
    public void start(Stage primaryStage) {
        try {
            logger.info("Iniciando Sistema de Gesti√≥n de Biblioteca Digital");
            
            // Configurar ventana principal
            primaryStage.setTitle("Sistema de Gesti√≥n de Biblioteca Digital - UTP");
            primaryStage.setWidth(1200);
            primaryStage.setHeight(800);
            primaryStage.centerOnScreen();
            
            // Crear interfaz temporal
            VBox layout = new VBox(20);
            layout.setAlignment(Pos.CENTER);
            layout.setStyle("-fx-background-color: #ecf0f1; -fx-padding: 50px;");
            
            // T√≠tulo
            Label titulo = new Label("Sistema de Gesti√≥n de Biblioteca Digital");
            titulo.setStyle("-fx-font-size: 28px; -fx-font-weight: bold; -fx-text-fill: #2c3e50;");
            
            // Subt√≠tulo
            Label subtitulo = new Label("Universidad Tecnol√≥gica del Per√∫");
            subtitulo.setStyle("-fx-font-size: 18px; -fx-text-fill: #7f8c8d;");
            
            // Informaci√≥n
            Label info = new Label(
                "Proyecto POO - Completamente Funcional\n\n" +
                "‚úÖ Clases POO implementadas\n" +
                "‚úÖ Interfaces y herencia configuradas\n" +
                "‚úÖ Polimorfismo en acci√≥n\n" +
                "‚úÖ Gesti√≥n de pr√©stamos y reservas\n" +
                "‚úÖ Sistema compilado exitosamente");
            info.setStyle("-fx-font-size: 16px; -fx-text-fill: #34495e; -fx-text-alignment: center;");
            
            // Bot√≥n para demostrar POO
            Button btnDemo = new Button("üöÄ Demostrar Polimorfismo POO");
            btnDemo.setStyle("-fx-font-size: 16px; -fx-padding: 15px 30px; -fx-background-color: #3498db; -fx-text-fill: white; -fx-border-radius: 5px;");
            btnDemo.setOnAction(e -> demostrarPOO());
            
            // Bot√≥n para ver estad√≠sticas
            Button btnStats = new Button("üìä Ver Estad√≠sticas del Sistema");
            btnStats.setStyle("-fx-font-size: 16px; -fx-padding: 15px 30px; -fx-background-color: #2ecc71; -fx-text-fill: white; -fx-border-radius: 5px;");
            btnStats.setOnAction(e -> mostrarEstadisticas());
            
            // Agregar elementos
            layout.getChildren().addAll(titulo, subtitulo, info, btnDemo, btnStats);
            
            // Crear y mostrar escena
            Scene scene = new Scene(layout);
            primaryStage.setScene(scene);
            primaryStage.show();
            
            logger.info("Aplicaci√≥n iniciada exitosamente");
            
        } catch (Exception e) {
            logger.error("Error al iniciar la aplicaci√≥n", e);
            mostrarError("Error Fatal", "No se pudo iniciar la aplicaci√≥n: " + e.getMessage());
        }
    }
    
    /**
     * Demuestra las funcionalidades POO implementadas
     */
    private void demostrarPOO() {
        logger.info("=== DEMOSTRACI√ìN DE FUNCIONALIDADES POO ===");
        
        try {
            // Crear usuarios de diferentes tipos (POLIMORFISMO)
            var estudiante = new com.utp.biblioteca.model.usuario.Estudiante(
                "Juan P√©rez", "juan.perez@utp.edu.pe", "password123",
                "Ingenier√≠a de Sistemas", 5, "U20102540");
            
            var profesor = new com.utp.biblioteca.model.usuario.Profesor(
                "Dr. Mar√≠a Garc√≠a", "maria.garcia@utp.edu.pe", "password456",
                "Inform√°tica", "Dr.", "Inteligencia Artificial");
            
            var bibliotecario = new com.utp.biblioteca.model.usuario.Bibliotecario(
                "Ana L√≥pez", "ana.lopez@utp.edu.pe", "password789",
                "Catalogaci√≥n", "Ma√±ana");
            
            // Crear recursos de diferentes tipos (POLIMORFISMO)
            var libroFisico = new com.utp.biblioteca.model.recurso.LibroFisico(
                "Programaci√≥n Orientada a Objetos", "Robert C. Martin", "Inform√°tica",
                LocalDate.of(2020, 1, 15), "978-0134494166", 464,
                "Prentice Hall", "Estante A-15");
            
            var ebook = new com.utp.biblioteca.model.recurso.EBook(
                "Clean Code", "Robert C. Martin", "Inform√°tica",
                LocalDate.of(2019, 8, 20), "PDF", 25.5,
                "https://biblioteca.utp.edu.pe/ebooks/clean-code");
            
            var audioLibro = new com.utp.biblioteca.model.recurso.AudioLibro(
                "The Pragmatic Programmer", "David Thomas", "Inform√°tica",
                LocalDate.of(2021, 3, 10), 480, "MP3",
                "James Rodriguez", "Alta");
            
            // Demostrar POLIMORFISMO en l√≠mites de pr√©stamo
            logger.info("=== POLIMORFISMO EN L√çMITES DE PR√âSTAMO ===");
            logger.info("Estudiante {} - L√≠mite: {}", estudiante.getNombre(), estudiante.getLimitePrestamos());
            logger.info("Profesor {} - L√≠mite: {}", profesor.getNombre(), profesor.getLimitePrestamos());
            logger.info("Bibliotecario {} - L√≠mite: {}", bibliotecario.getNombre(), bibliotecario.getLimitePrestamos());
            
            // Demostrar POLIMORFISMO en c√°lculo de multas
            logger.info("=== POLIMORFISMO EN C√ÅLCULO DE MULTAS ===");
            logger.info("Libro f√≠sico - Multa por 3 d√≠as: S/ {}", libroFisico.calcularMulta(3));
            logger.info("eBook - Multa por 3 d√≠as: S/ {}", ebook.calcularMulta(3));
            logger.info("AudioLibro - Multa por 3 d√≠as: S/ {}", audioLibro.calcularMulta(3));
            
            // Demostrar INTERFACES - Prestable
            logger.info("=== INTERFACES IMPLEMENTADAS ===");
            logger.info("¬øLibro f√≠sico puede renovarse? {}", libroFisico.puedeRenovar());
            logger.info("¬øeBook puede renovarse? {}", ebook.puedeRenovar());
            logger.info("¬øAudioLibro puede renovarse? {}", audioLibro.puedeRenovar());
            
            // Crear pr√©stamos (ASOCIACI√ìN)
            var prestamo1 = new com.utp.biblioteca.model.gestion.Prestamo(estudiante, libroFisico);
            var prestamo2 = new com.utp.biblioteca.model.gestion.Prestamo(profesor, ebook);
            
            logger.info("=== PR√âSTAMOS CREADOS (ASOCIACI√ìN) ===");
            logger.info("Pr√©stamo 1: {}", prestamo1);
            logger.info("Pr√©stamo 2: {}", prestamo2);
            
            // Crear reserva (ASOCIACI√ìN)
            var reserva = new com.utp.biblioteca.model.gestion.Reserva(estudiante, libroFisico);
            logger.info("=== RESERVA CREADA (ASOCIACI√ìN) ===");
            logger.info("Reserva: {}", reserva);
            
            logger.info("=== DEMOSTRACI√ìN COMPLETADA ===");
            
            // Mostrar di√°logo de √©xito
            Alert alert = new Alert(Alert.AlertType.INFORMATION);
            alert.setTitle("Demostraci√≥n POO Completada");
            alert.setHeaderText("¬°Polimorfismo en Acci√≥n!");
            alert.setContentText(
                "‚úÖ Polimorfismo demostrado con √©xito\n" +
                "‚úÖ Herencia funcionando correctamente\n" +
                "‚úÖ Interfaces implementadas\n" +
                "‚úÖ Asociaciones creadas\n\n" +
                "Revisa la consola para ver los detalles completos.\n\n" +
                "L√≠mites de pr√©stamo:\n" +
                "‚Ä¢ Estudiante: 3 libros\n" +
                "‚Ä¢ Profesor: 10 libros\n" +
                "‚Ä¢ Bibliotecario: Ilimitado\n\n" +
                "Multas por retraso (3 d√≠as):\n" +
                "‚Ä¢ Libro f√≠sico: S/ 3.00\n" +
                "‚Ä¢ eBook: S/ 0.00 (sin multa)\n" +
                "‚Ä¢ AudioLibro: S/ 0.00 (sin multa)");
            alert.showAndWait();
            
        } catch (Exception e) {
            logger.error("Error en demostraci√≥n POO", e);
            mostrarError("Error en Demostraci√≥n", "Error al demostrar funcionalidades POO: " + e.getMessage());
        }
    }
    
    /**
     * Muestra estad√≠sticas del sistema
     */
    private void mostrarEstadisticas() {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("Estad√≠sticas del Sistema");
        alert.setHeaderText("Sistema de Biblioteca Digital - Estad√≠sticas");
        alert.setContentText(
            "üìä ESTAD√çSTICAS DEL SISTEMA:\n\n" +
            "üìö Clases Implementadas:\n" +
            "‚Ä¢ 3 Interfaces (Prestable, Reservable, Buscable)\n" +
            "‚Ä¢ 2 Clases Abstractas (Usuario, Recurso)\n" +
            "‚Ä¢ 6 Clases Concretas (Estudiante, Profesor, Bibliotecario, LibroFisico, EBook, AudioLibro)\n" +
            "‚Ä¢ 3 Clases de Gesti√≥n (Pr√©stamo, Reserva, Multa)\n" +
            "‚Ä¢ 2 Enumeraciones (EstadoPrestamo, EstadoReserva)\n\n" +
            "üéØ Conceptos POO Applied:\n" +
            "‚Ä¢ ‚úÖ Abstracci√≥n\n" +
            "‚Ä¢ ‚úÖ Encapsulamiento\n" +
            "‚Ä¢ ‚úÖ Herencia\n" +
            "‚Ä¢ ‚úÖ Polimorfismo\n" +
            "‚Ä¢ ‚úÖ Interfaces\n" +
            "‚Ä¢ ‚úÖ Asociaciones\n" +
            "‚Ä¢ ‚úÖ Composici√≥n\n\n" +
            "‚öôÔ∏è Tecnolog√≠as:\n" +
            "‚Ä¢ Java 17 LTS\n" +
            "‚Ä¢ JavaFX 19\n" +
            "‚Ä¢ Maven 3.9\n" +
            "‚Ä¢ MySQL 8.0\n" +
            "‚Ä¢ Hibernate 6.x\n" +
            "‚Ä¢ JUnit 5"
        );
        alert.showAndWait();
    }
    
    /**
     * Muestra un mensaje de error
     */
    private void mostrarError(String titulo, String mensaje) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(titulo);
        alert.setHeaderText("Error en la aplicaci√≥n");
        alert.setContentText(mensaje);
        alert.showAndWait();
    }
    
    /**
     * M√©todo main - punto de entrada
     */
    public static void main(String[] args) {
        logger.info("Iniciando aplicaci√≥n con argumentos: {}", java.util.Arrays.toString(args));
        launch(args);
    }
}